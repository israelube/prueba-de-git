/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package maestros;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Result;
import javax.xml.transform.Source;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.Text;

/**
 *
 * @author prof_tes_a
 */
public class CelMaeCel extends javax.swing.JInternalFrame
{
    private CelMaeCel_01 objMaeCel_01;
            
    /**
     * Creates new form CelMaeCel
     */
    public CelMaeCel()
    {
        initComponents();
        cargarSistemasOperativos();
        objMaeCel_01=new CelMaeCel_01(JOptionPane.getFrameForComponent(this), true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgrTec = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtMod = new javax.swing.JTextField();
        cboSisOpe = new javax.swing.JComboBox();
        butMar = new javax.swing.JButton();
        txtMar = new javax.swing.JTextField();
        optTecFis = new javax.swing.JRadioButton();
        optTecAmb = new javax.swing.JRadioButton();
        optTecTac = new javax.swing.JRadioButton();
        chkAccRad = new javax.swing.JCheckBox();
        chkAccCam = new javax.swing.JCheckBox();
        chkAccGPS = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaObs = new javax.swing.JTextArea();
        butGua = new javax.swing.JButton();
        butAbr = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Celulares");

        jLabel1.setText("Marca:");

        jLabel2.setText("Modelo:");

        jLabel3.setText("Sistema operativo:");

        jLabel4.setText("Teclado:");

        jLabel5.setText("Observaciones:");

        jLabel6.setText("Accesorios:");

        cboSisOpe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        butMar.setText("...");
        butMar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butMarActionPerformed(evt);
            }
        });

        txtMar.setEditable(false);
        txtMar.setBackground(new java.awt.Color(255, 255, 255));

        bgrTec.add(optTecFis);
        optTecFis.setSelected(true);
        optTecFis.setText("Físico");

        bgrTec.add(optTecAmb);
        optTecAmb.setText("Ambos");

        bgrTec.add(optTecTac);
        optTecTac.setText("Táctil");

        chkAccRad.setText("Radio");

        chkAccCam.setText("Cámara");

        chkAccGPS.setText("GPS");

        txaObs.setColumns(20);
        txaObs.setLineWrap(true);
        txaObs.setRows(5);
        jScrollPane1.setViewportView(txaObs);

        butGua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/guardar.png"))); // NOI18N
        butGua.setText("Guardar");
        butGua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butGuaActionPerformed(evt);
            }
        });

        butAbr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/abrir.gif"))); // NOI18N
        butAbr.setText("Abrir");
        butAbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAbrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkAccCam, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkAccRad, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(optTecFis, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(optTecTac, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(optTecAmb, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkAccGPS, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(butGua, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(butAbr, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtMod, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtMar, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cboSisOpe, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane1))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butMar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMod, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butMar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSisOpe, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(optTecTac, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(optTecFis, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(optTecAmb, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkAccRad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkAccCam, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(chkAccGPS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(butGua, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(butAbr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        setBounds(0, 0, 450, 360);
    }// </editor-fold>//GEN-END:initComponents

    private void butGuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butGuaActionPerformed
        guardarCelular();
    }//GEN-LAST:event_butGuaActionPerformed

    private void butAbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAbrActionPerformed
        abrirCelular();
    }//GEN-LAST:event_butAbrActionPerformed

    private void butMarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butMarActionPerformed
        objMaeCel_01.setVisible(true);
        if (objMaeCel_01.isClickAceptar())
            txtMar.setText(objMaeCel_01.getMarcaSeleccionada());
    }//GEN-LAST:event_butMarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgrTec;
    private javax.swing.JButton butAbr;
    private javax.swing.JButton butGua;
    private javax.swing.JButton butMar;
    private javax.swing.JComboBox cboSisOpe;
    private javax.swing.JCheckBox chkAccCam;
    private javax.swing.JCheckBox chkAccGPS;
    private javax.swing.JCheckBox chkAccRad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton optTecAmb;
    private javax.swing.JRadioButton optTecFis;
    private javax.swing.JRadioButton optTecTac;
    private javax.swing.JTextArea txaObs;
    private javax.swing.JTextField txtMar;
    private javax.swing.JTextField txtMod;
    // End of variables declaration//GEN-END:variables

    private boolean cargarSistemasOperativos()
    {
        boolean blnRes=true;
        try
        {
            String strCon=""; //Contenido del archivo.
            java.io.FileReader objFilRea=new java.io.FileReader("SistemasOperativos.txt");
            java.io.BufferedReader objBufRea=new java.io.BufferedReader(objFilRea);
            String strLin;
            cboSisOpe.removeAllItems();
            while((strLin=objBufRea.readLine())!=null)
            {
                cboSisOpe.addItem(strLin);
            }
            objBufRea.close();
        }
        catch(java.io.FileNotFoundException e)
        {
            JOptionPane.showMessageDialog(this, "Excepción: " + e.toString(), "Sistema TES", JOptionPane.ERROR_MESSAGE);
            blnRes=false;
        }
        catch(java.io.IOException e)
        {
            JOptionPane.showMessageDialog(this, "Excepción: " + e.toString(), "Sistema TES", JOptionPane.ERROR_MESSAGE);
            blnRes=false;
        }
        return blnRes;
    }
    
    private boolean guardarCelular()
    {
        boolean blnRes=true;
        try
        {
            String strArc;
            if (this.getTitle().equals("Celulares"))
            {
                JFileChooser objFilCho=new JFileChooser();
                objFilCho.setDialogTitle("Guardar");
                objFilCho.setFileSelectionMode(JFileChooser.FILES_ONLY);
                objFilCho.setCurrentDirectory(new File("C:\\"));
                //Filtrado (Opción 1):
                FileNameExtensionFilter objFilNamExt=new FileNameExtensionFilter("Archivos XML", "xml");
                objFilCho.setFileFilter(objFilNamExt);
                //Filtrado (Opción 2):
    //            objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos de texto", "txt"));
    //            objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos java", "java"));
    //            objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos php", "php", "php4", "phtml"));
                if (objFilCho.showSaveDialog(this)==JFileChooser.APPROVE_OPTION)
                {
                    strArc=objFilCho.getSelectedFile().getPath();
                    //Si no tiene la extensión "txt" agregarsela.
                    if (!strArc.toLowerCase().endsWith(".xml"))
                        strArc+=".xml";
                    if (guardarArcXML(strArc))
                        this.setTitle(strArc);
        //            System.out.println("Directorio seleccionado: " + strArc);
        //            System.out.println("Texto: " + ((MenArcBloNot)dskGen.getSelectedFrame()).txaPag.getText());
                }
                else
                {
                    System.out.println("El usuario canceló");
                }
            }
            else
                guardarArcXML(this.getTitle());
        }
        catch(Exception e)
        {
            System.out.println("Excepción: " + e.toString());
            blnRes=false;
        }
        return blnRes;
    }
    
    private boolean guardarArcXML(String strNomArc)
    {
        boolean blnRes=true;
        try
        {
            DocumentBuilderFactory obDocBuiFac=DocumentBuilderFactory.newInstance();
            DocumentBuilder objDocBui=obDocBuiFac.newDocumentBuilder();
            DOMImplementation objDomImp=objDocBui.getDOMImplementation();
            Document objDoc=objDomImp.createDocument(null, "xml", null);
            objDoc.setXmlVersion("1.0");
            
            //Crear el nodo raíz.
            Element objNodRai=objDoc.createElement("Celular");
            //Crear los nodos hijos.
            Element objNodMod=objDoc.createElement("Modelo");
            Element objNodMar=objDoc.createElement("Marca");
            Element objNodSisOpe=objDoc.createElement("SistemaOperativo");
            Element objNodTec=objDoc.createElement("Teclado");
            Element objNodAcc=objDoc.createElement("Accesorios");
            Element objNodObs=objDoc.createElement("Observaciones");
            //Asignar el valor a los nodos hijos.
            Text objTexMod=objDoc.createTextNode(txtMod.getText());
            Text objTexMar=objDoc.createTextNode(txtMar.getText());
            Text objTexSisOpe=objDoc.createTextNode(cboSisOpe.getSelectedItem().toString());
            String strTec="";
            if (optTecFis.isSelected())
            {
                strTec="Físico";
            }
            else if (optTecTac.isSelected())
            {
                strTec="Táctil";
            }
            else
            {
                strTec="Ambos";
            }
            Text objTexTec=objDoc.createTextNode(strTec);
            String strAcc="";
            if (chkAccCam.isSelected())
            {
                strAcc="Cámara";
            }
            if (chkAccRad.isSelected())
            {
                strAcc+=(strAcc.equals("")?"Radio":", Radio");
            }
            if (chkAccGPS.isSelected())
            {
                strAcc+=(strAcc.equals("")?"GPS":", GPS");
            }
            Text objTexAcc=objDoc.createTextNode(strAcc);
            Text objTexObs=objDoc.createTextNode(txaObs.getText());
            
            //Agregar los nodos al documento.
            objDoc.getDocumentElement().appendChild(objNodRai);
            objNodRai.appendChild(objNodMod);
            objNodRai.appendChild(objNodMar);
            objNodRai.appendChild(objNodSisOpe);
            objNodRai.appendChild(objNodTec);
            objNodRai.appendChild(objNodAcc);
            objNodRai.appendChild(objNodObs);
            objNodMod.appendChild(objTexMod);
            objNodMar.appendChild(objTexMar);
            objNodSisOpe.appendChild(objTexSisOpe);
            objNodTec.appendChild(objTexTec);
            objNodAcc.appendChild(objTexAcc);
            objNodObs.appendChild(objTexObs);
            Source objSou=new DOMSource(objDoc);
            Result objRes=new StreamResult(new java.io.File(strNomArc));
            Result objResCon=new StreamResult(System.out);
            Transformer objTra=TransformerFactory.newInstance().newTransformer();
            objTra.transform(objSou, objRes);
            objTra.transform(objSou, objResCon);
        }
        catch(Exception e)
        {
            System.out.println("Excepción: " + e.toString());
            blnRes=false;
        }
        return blnRes;
    }
    
    private boolean abrirCelular()
    {
        boolean blnRes=true;
        try
        {
            String strArc;
            JFileChooser objFilCho=new JFileChooser();
            objFilCho.setDialogTitle("Abrir");
            objFilCho.setFileSelectionMode(JFileChooser.FILES_ONLY);
            objFilCho.setCurrentDirectory(new File("C:\\"));
            //Filtrado (Opción 1):
            FileNameExtensionFilter objFilNamExt=new FileNameExtensionFilter("Archivos XML", "xml");
            objFilCho.setFileFilter(objFilNamExt);
            //Filtrado (Opción 2):
    //        objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos de texto", "txt"));
    //        objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos java", "java"));
    //        objFilCho.addChoosableFileFilter(new FileNameExtensionFilter("Archivos php", "php", "php4", "phtml"));
            if (objFilCho.showOpenDialog(this)==JFileChooser.APPROVE_OPTION)
            {
                strArc=objFilCho.getSelectedFile().getPath();
                //Si no tiene la extensión "txt" agregarsela.
    //            if (!strArc.toLowerCase().endsWith(".txt"))
    //                strArc+=".txt";

//                CarMaeVeh objCarMaeVeh=new CarMaeVeh();
//                dskGen.add(objCarMaeVeh, JLayeredPane.DEFAULT_LAYER);
//                objCarMaeVeh.setVisible(true);

                //abrirArcTex(strArc, ((MenArcBloNot)dskGen.getSelectedFrame()).txaPag);
                abrirArcXML(strArc);
                this.setTitle(strArc);
    //            System.out.println("Directorio seleccionado: " + strArc);
    //            System.out.println("Texto: " + ((ifrProPal)dskGen.getSelectedFrame()).txaPag.getText());
            }
            else
            {
                System.out.println("El usuario canceló");
            }
        }
        catch(Exception e)
        {
            System.out.println("Excepción: " + e.toString());
            blnRes=false;
        }
        return blnRes;
    }
    
    private boolean abrirArcXML(String strNomArc)
    {
        boolean blnRes=true;
        try
        {
            DocumentBuilderFactory obDocBuiFac=DocumentBuilderFactory.newInstance();
            DocumentBuilder objDocBui=obDocBuiFac.newDocumentBuilder();
            Document objDoc=objDocBui.parse(new File(strNomArc));
            objDoc.getDocumentElement().normalize();
//            System.out.println("Nodo raíz: " + objDoc.getDocumentElement().getNodeName());
            NodeList objNodLis=objDoc.getElementsByTagName("Celular");
            for (int i=0; i<objNodLis.getLength(); i++)
            {
                Node objNodPel=objNodLis.item(i);
                if (objNodPel.getNodeType()==Node.ELEMENT_NODE)
                {
                    Element objEle=(Element)objNodPel;
                    txtMod.setText(getTagValue("Modelo", objEle));
                    txtMar.setText(getTagValue("Marca", objEle));
                    cboSisOpe.setSelectedItem(getTagValue("SistemaOperativo", objEle));
                    switch (getTagValue("Teclado", objEle))
                    {
                        case "Físico":
                            optTecFis.setSelected(true);
                            break;
                        case "Táctil":
                            optTecTac.setSelected(true);
                            break;
                        case "Ambos":
                            optTecAmb.setSelected(true);
                            break;
                    }
                    chkAccCam.setSelected(false);
                    chkAccRad.setSelected(false);
                    chkAccGPS.setSelected(false);
                    if (getTagValue("Accesorios", objEle).indexOf("Cámara")!=-1)
                    {
                        chkAccCam.setSelected(true);
                    }
                    if (getTagValue("Accesorios", objEle).indexOf("Radio")!=-1)
                    {
                        chkAccRad.setSelected(true);
                    }
                    if (getTagValue("Accesorios", objEle).indexOf("GPS")!=-1)
                    {
                        chkAccGPS.setSelected(true);
                    }
                    txaObs.setText(getTagValue("Observaciones", objEle));
                }
            }
        }
        catch(Exception e)
        {
            System.out.println("Excepción: " + e.toString());
            blnRes=false;
        }
        return blnRes;
    }
    
    private static String getTagValue(String sTag, Element eElement)
    {
        NodeList nlList= eElement.getElementsByTagName(sTag).item(0).getChildNodes();
        Node nValue = (Node) nlList.item(0);
        if (nValue==null)
            return "";
        else
            return nValue.getNodeValue();
    }
    
}
